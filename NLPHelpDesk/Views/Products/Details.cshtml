@model NLPHelpDesk.Data.Models.ProductDetailsViewModel
@using static NLPHelpDesk.Helpers.Constants;

@{
    ViewData[VIEW_DATA_TITLE] = TITLE_DETAILS + Model.Product.ProductName;
}

<div class="primary-content-heading d-flex justify-content-between align-items-center mb-3">
    <div class="d-flex flex-column">
        <div class="d-flex align-items-center gap-3">
            <a class="btn btn-outline-dark btn-sm rounded-circle" asp-action="Index" asp-controller="Products">
                <i class="bi bi-arrow-left"></i>
            </a>
            <h2 class="mb-0">@ViewData[VIEW_DATA_TITLE]</h2>
        </div>
    </div>
    @if (Model.IsOwner)
    {
        <div>
            <a asp-action="Edit" class="btn btn-outline-theme" asp-route-productId="@Model.Product.ProductId">
                <i class="bi bi-pencil-square"></i>Edit
            </a>
            <div asp-validation-summary="ModelOnly" class="text-danger mb-3" role="alert"></div>
        </div>
    }
</div>

<div class="row">
    <div class="col-md-12 mb-3">
        <div class="card shadow-sm">
            <div class="card-header bg-theme text-white">
                <h5 class="mb-0">Product Details</h5>
            </div>
            <div class="card-body">
                <dl class="row mb-0">
                    <dt class="col-md-4">@Html.DisplayNameFor(model => model.Product.ProductName):</dt>
                    <dd class="col-md-8">@Html.DisplayFor(model => model.Product.ProductName)</dd>
                    <dt class="col-md-4">@Html.DisplayNameFor(model => model.Product.ReleaseDate):</dt>
                    <dd class="col-md-8">@Html.DisplayFor(model => model.Product.ReleaseDate)</dd>
                    <dt class="col-md-4">@Html.DisplayNameFor(model => model.Product.ProductDescription):</dt>
                    <dd class="col-md-8">@Html.DisplayFor(model => model.Product.ProductDescription)</dd>
                </dl>
            </div>
        </div>
    </div>
    
    <div class="col-md-12">
        <div class="card shadow-sm border-0">
            <div class="card-header bg-secondary text-white d-flex justify-content-between align-items-center">
                <h5 class="mb-0">Tickets</h5>
                <button id="toggle-tickets" class="btn btn-outline-light btn-sm"
                        data-completed-url="@Url.Action("Details", "Products", new { productId = @Model.Product.ProductId, isCompleted = true })"
                        data-progress-url="@Url.Action("Details", "Products", new { productId = @Model.Product.ProductId, isCompleted = false })">
                    @(ViewBag.IsCompleted ? "In-progress" : "Completed and Cancelled")
                </button>
            </div>
            <div class="card-body p-0">
                @await Html.PartialAsync("_TicketList_Product", Model.Product.Tickets)
            </div>
        </div>
    </div>
</div>

<script src="/js/ticket.js"></script>